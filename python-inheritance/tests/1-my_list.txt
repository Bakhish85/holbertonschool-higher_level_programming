================
1-my_list Module
================


Import module:
==============
	>>> MyList = __import__('1-my_list').MyList

Function:
=========
Write a class MyList that inherits from list.
	
	* Public instance method: def print_sorted(self): that prints the list, but sorted (ascending sort)
	* You can assume that all the elements of the list will be of type int
	* You are not allowed to import any module

Section // Regular
==================

Test case #0:	A test case for do nothing with positive numbers

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> print(my_list)
	>>> [1, 2, 3]
	
	>>> my_list.print_sorted()
	>>> [1, 2, 3]
	
	>>> print(my_list)
	>>> [1, 2, 3]

Test case #1:	A test case for do nothin with negative numbers.
	>>> my_list = MyList()
        >>> my_list.append(-3)
        >>> my_list.append(-2)
        >>> my_list.append(-1)
        >>> print(my_list)
        >>> [-3, -2, -1]
        
	>>> my_list.print_sorted()
        >>> [-3, -2, -1]
        
	>>> print(my_list)
        >>> [-3, -2, -1]

Test case #2:	A test case for to order a disordered list.
        >>> my_list = MyList()
        >>> my_list.append(3)
        >>> my_list.append(-2)
        >>> my_list.append(1)
        >>> print(my_list)
        >>> [3, -2, 1]
        
	>>> my_list.print_sorted()
        >>> [-2, 1, 3]
        
	>>> print(my_list)
        >>> [3, -2, 1]

Test case #3: A test case for empty list.
        >>> my_list = MyList()
        >>> print(my_list)
        >>> []
        
	>>> my_list.print_sorted()
        >>> []
        
	>>> print(my_list)
        >>> []

Section // Attribute error
==========================

Test case #4: A test case for tuples.
	>>> my_list = (1,2)
	>>> print(my_list)
	>>> (1, 2)

	>>> my_list.print_sorted()
	>>> Traceback (most recent call last):
	>>> AttributeError: 'tuple' object has no attribute 'print_sorted'
