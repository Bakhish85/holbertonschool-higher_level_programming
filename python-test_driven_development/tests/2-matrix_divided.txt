=========================
2. Matrix division module
=========================

Import module:
==============
	
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Function:
=========

Write a function that divides all elements of a matrix.

Operations:
===========

* Matrix must be a list of lists of integers or floats,
otherwise raise a TypeError exception with the message
matrix must be a matrix (list of lists) of integers/floats.

* Each row of the matrix must be of the same size,
otherwise raise a TypeError exception with the message
Each row of the matrix must have the same size.

* div must be a number (integer or float),
otherwise raise a TypeError exception with the message
div must be a number.

* div can not be equal to 0, otherise raise a
ZeroDivisionError exception with the message division by zero.


Section // Non-Parameters
=========================

Test case #0: A test case without parameters
	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test case #1: A test case with no assigned value for matrix
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	NameError: name 'matrix' is not defined

Test case #2: A test case with no assigned values for div
	>>> matrix_divided([[1, 2], [3, 4]], div)
	Traceback (most recent call last):
	NameError: name 'div' is not defined


Section // Bad Divisor
======================

Test case #3: A test case for div with value of 0.
	>>> matrix_divided([[1, 2], [3, 4]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Test case #4: A test case for div with the type of 'str'
	>>> matrix_divided([[1, 2], [3, 4]], '3')
	Traceback (most recent call last):
	TypeError: div must be a number

Test case #5: A test case for div with the value of float.
	>>> matrix_divided([[1, 2], [3, 4]], 3.0)
	[[0.33, 0.67], [1.0, 1.33]]

Section // Incorrect matrix
===========================

Test case #6: A test case for matrix with rows from some of these are not lists.
	>>> matrix = [[1, 2], 3, [4, 5]]
	>>> matrix_divivded(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #7: A test case for matrix with lists of no int or float.
	>>> matrix = [[1, 'a'], [4, 'b']]
	>>> matrix_divided(matrix, 4)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test case #8: A test case for matrix with different sizes of rows.
	>>> matrix = [[1, 2], [3 , 4], [5, 6, 7]
	>>> matrix_divided(matrix, 5)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

